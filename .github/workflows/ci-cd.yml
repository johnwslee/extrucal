name: ci-cd

on: [push, pull_request]

jobs:
  ci:
    # Step 1. Set up operating system
    runs-on: ubuntu-latest

    steps:
    # Step 2. Set up Python 3.9
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
        
    # Step 3. Check-out repository so we can access its contents
    - name: Check-out repository
      uses: actions/checkout@v2

    # Step 4. Install poetry
    - name: Install poetry
      uses: snok/install-poetry@v1

    # Step 5. Install our package
    - name: Install package
      run: poetry install

    # Step 6. Run tests for package
    - name: Test with pytest
      run: poetry run pytest tests/ --cov=extrucal --cov-report=xml

    # Step 7. Use Codecov to track coverage
    - name: Use Codecov to track coverage
      uses: codecov/codecov-action@v2
      with:
        files: ./coverage.xml   # coverage report
        fail_ci_if_error: true  # terminate workflow if there's an error

    # Step 8. Build documentation
    - name: Build documentation
      run: poetry run make html --directory docs/

  cd:
    # Only run this job if the "ci" job passes
    needs: ci

    # Only run this job if new work is pushed to "main"
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    # Step 1. Set up operating system
    runs-on: ubuntu-latest

    steps:
    # Step 2. Set up Python 3.9
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    # Step 3. Check-out repository so we can access its contents (disable main branch protection)
    - name: Check-out repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Install poetry
      uses: snok/install-poetry@v1

    - name: Install package
      run: poetry install

    - name: Use Python Semantic Release to prepare release
      env:
        # This token is created automatically by GH Actions
        GH_TOKEN: {% raw %}${{ secrets.GITHUB_TOKEN }}{% endraw %}
      run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          poetry run semantic-release publish
    - name: Publish to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: {% raw %}${{ secrets.TEST_PYPI_API_TOKEN }}{% endraw %}
        repository_url: https://test.pypi.org/legacy/

    - name: Test install from TestPyPI
      run: |
          pip install \
          --index-url https://test.pypi.org/simple/ \
          --extra-index-url https://pypi.org/simple \
          {{ cookiecutter.package_name }}
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: {% raw %}${{ secrets.PYPI_API_TOKEN }}{% endraw %}
